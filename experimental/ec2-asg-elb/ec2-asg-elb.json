{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "EC2 AutoScaling Group with Public ELB",
	"Parameters": {
		"KeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
    "VpcId": {
      "Description": "VPC associated with the provided subnets",
      "Type": "AWS::EC2::VPC::Id"
    },
    "Subnets": {
      "Description": "List of VPC subnet IDs for the cluster",
      "Type": "List<AWS::EC2::Subnet::Id>"
    }
	},
	"Metadata" : {
		"AWS::CloudFormation::Interface" : {
			"ParameterGroups" : [
				{
					"Label" : { "default" : "EC2 Key Pair" },
					"Parameters" : ["KeyName"]
				}
			]
		}
	},
	"Mappings": {
		"EC2RegionMap": {
			"ap-northeast-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-cbf90ecb"},
			"ap-southeast-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-68d8e93a"},
			"ap-southeast-2": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-fd9cecc7"},
			"eu-central-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-a8221fb5"},
			"eu-west-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-a10897d6"},
			"sa-east-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-b52890a8"},
			"us-east-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-1ecae776"},
			"us-west-1": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-d114f295"},
			"us-west-2": {"AmazonLinuxAMIHVMEBSBacked64bit": "ami-e7527ed7"}
		}
	},
	"Resources": {
		"CodeDeployTrustRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Sid": "1",
							"Effect": "Allow",
							"Principal": {
								"Service": "codedeploy.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				},
				"Path": "/"
			}
		},
		"CodeDeployRolePolicies": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "CodeDeployPolicy",
				"PolicyDocument": {
					"Statement": [
						{
							"Effect": "Allow",
							"Resource": ["*"],
							"Action": ["ec2:Describe*", "ec2:TerminateInstances"]
						},
						{
							"Effect": "Allow",
							"Resource": ["*"],
							"Action": ["autoscaling:*"]
						},
						{
							"Effect": "Allow",
							"Resource": ["*"],
							"Action": [
								"elasticloadbalancing:DescribeLoadBalancers",
								"elasticloadbalancing:DescribeInstanceHealth",
								"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
								"elasticloadbalancing:DeregisterInstancesFromLoadBalancer"
							]
						},
						{
							"Effect": "Allow",
							"Resource": ["*"],
							"Action": [
								"Tag:getResources",
								"Tag:getTags",
								"Tag:getTagsForResource",
								"Tag:getTagsForResourceList"
							]
						}
					]
				},
				"Roles": [
					{
						"Ref": "CodeDeployTrustRole"
					}
				]
			}
		},
		"InstanceRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"AssumeRolePolicyDocument": {
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": [
									"ec2.amazonaws.com"
								]
							},
							"Action": [
								"sts:AssumeRole"
							]
						}
					]
				},
				"Path": "/"
			}
		},
		"InstanceRolePolicies": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "InstanceRole",
				"PolicyDocument": {
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"autoscaling:Describe*",
								"cloudformation:Describe*",
								"cloudformation:GetTemplate",
								"s3:Get*"
							],
							"Resource": "*"
						}
					]
				},
				"Roles": [
					{
						"Ref": "InstanceRole"
					}
				]
			}
		},
		"InstanceRoleInstanceProfile": {
			"Type": "AWS::IAM::InstanceProfile",
			"Properties": {
				"Path": "/",
				"Roles": [
					{
						"Ref": "InstanceRole"
					}
				]
			}
		},
		"LoadBalancer": {
			"Type": "AWS::ElasticLoadBalancing::LoadBalancer",
			"Properties": {
				"Subnets": {
          "Ref": "Subnets"
        },
				"LoadBalancerName": "sample-elb",
				"Listeners": [{
					"InstancePort": "8080",
					"InstanceProtocol": "HTTP",
					"LoadBalancerPort": "80",
					"Protocol": "HTTP"
				}],
				"HealthCheck": {
					"HealthyThreshold": "2",
					"Interval": "5",
					"Target": "TCP:8080",
					"Timeout": "3",
					"UnhealthyThreshold": "2"
				},
				"SecurityGroups": [{"Ref": "LoadBalancerSecurityGroup"}],
				"Scheme": "internet-facing",
				"Tags" : [
						{
								"Key" : "app_id",
								"Value" : { "Ref": "AppId"}
						},
						{
								"Key" : "env",
								"Value" : { "Ref": "AppEnv"}
						}
			 ]
			}
		},
		"LoadBalancerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "sample-elb-sg",
				"VpcId": {"Ref": "VpcId"},
				"SecurityGroupIngress": [{
					"CidrIp": "0.0.0.0/0",
					"FromPort": "80",
					"IpProtocol": "tcp",
					"ToPort": "80"
				}]
			}
		},
		"WebServerSecurityGroup": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": "sample-sg",
				"VpcId": {"Ref": "VpcId"},
				"SecurityGroupIngress": [{
					"CidrIp": "0.0.0.0/0",
					"FromPort": "22",
					"IpProtocol": "tcp",
					"ToPort": "22"
				}, {
					"FromPort": "8080",
					"IpProtocol": "tcp",
					"SourceSecurityGroupId": {"Ref": "LoadBalancerSecurityGroup"},
					"ToPort": "8080"
				}]
			}
		},
		"LaunchConfiguration": {
			"Type": "AWS::AutoScaling::LaunchConfiguration",
			"Metadata": {
				"AWS::CloudFormation::Init": {
					"config": {
						"packages": {
							"yum": {
								"java-1.8.0-openjdk-devel": []
							}
						},
						"files": {
							"/tmp/java_setup": {
								"content": {
									"Fn::Join": [
										"\n",
										[
											"#!/bin/bash -ex",
											"yum install -y java-1.8.0",
											"yum remove -y java-1.7.0-openjdk"
										]
									]
								},
								"mode": "000500",
								"owner": "root",
								"group": "root"
							}
						},
						"commands": {
							"01_config": {
								"command": "/tmp/java_setup",
								"cwd": "/opt"
							}
						}
					}
				}
			},
			"Properties": {
				"EbsOptimized": false,
				"ImageId": {"Fn::FindInMap": ["EC2RegionMap", {"Ref": "AWS::Region"}, "AmazonLinuxAMIHVMEBSBacked64bit"]},
				"InstanceType": "t2.micro",
				"SecurityGroups": [{"Ref": "WebServerSecurityGroup"}],
				"KeyName": {"Ref": "KeyName"},
				"IamInstanceProfile": {"Ref": "InstanceRoleInstanceProfile"},
				"AssociatePublicIpAddress": true,
				"UserData": {"Fn::Base64": {"Fn::Join": ["", [
					"#!/bin/bash -ex\n",
					"yum update -y aws-cfn-bootstrap\n",
					"/opt/aws/bin/cfn-init -v --stack ", {"Ref": "AWS::StackName"}, " --resource LaunchConfiguration --region ", {"Ref": "AWS::Region"}, "\n",
					"yum update -y\n",
                    "yum install -y ruby\n",
                    "yum install -y wget\n",
                    "cd /home/ec2-user\n",
                    "wget https://aws-codedeploy-",{"Ref": "AWS::Region"},".s3.amazonaws.com/latest/install\n",
                    "chmod +x ./install\n",
                    "./install auto\n",
                    "/opt/aws/bin/cfn-signal -e $? --stack ", {"Ref": "AWS::StackName"}, " --resource AutoScalingGroup --region ", {"Ref": "AWS::Region"}, "\n"
                ]]}}
			}
		},
		"AutoScalingGroup": {
			"Type": "AWS::AutoScaling::AutoScalingGroup",
			"Properties": {
				"LoadBalancerNames": [{"Ref": "LoadBalancer"}],
				"LaunchConfigurationName": {"Ref": "LaunchConfiguration"},
				"MinSize": "2",
				"MaxSize": "2",
				"DesiredCapacity": "2",
				"VPCZoneIdentifier": { "Ref" : "Subnets" }
			},
			"CreationPolicy": {
				"ResourceSignal": {
					"Timeout": "PT10M"
				}
			}
		}
	},
	"Outputs": {
		"LoadBalancerUrl": {
			"Description": "URL to access the application",
			"Value": {"Fn::Join": ["", ["http://", {"Fn::GetAtt": ["LoadBalancer", "DNSName"]}]]}
		},
		"AutoScalingGroupName": {
			"Description": "The name of the AutoScalingGroup",
			"Value": {"Ref": "AutoScalingGroup"}
		}
	}
}
